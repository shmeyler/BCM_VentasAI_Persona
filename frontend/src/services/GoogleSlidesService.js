import { google } from 'googleapis';

class GoogleSlidesService {
  constructor() {
    this.slides = null;
    this.auth = null;
  }

  // Initialize Google Slides API
  async initialize(credentials) {
    try {
      this.auth = new google.auth.GoogleAuth({
        credentials: credentials,
        scopes: [
          'https://www.googleapis.com/auth/presentations',
          'https://www.googleapis.com/auth/drive.file'
        ]
      });

      this.slides = google.slides({ version: 'v1', auth: this.auth });
      return true;
    } catch (error) {
      console.error('Error initializing Google Slides API:', error);
      return false;
    }
  }

  // Create a new presentation
  async createPresentation(title) {
    try {
      const response = await this.slides.presentations.create({
        requestBody: {
          title: title
        }
      });
      return response.data;
    } catch (error) {
      console.error('Error creating presentation:', error);
      throw error;
    }
  }

  // Generate persona slides content
  generatePersonaSlides(persona_data, generatedPersona) {
    const requests = [];
    
    // Slide 1: Title Slide
    requests.push({
      createSlide: {
        objectId: 'slide1',
        slideLayoutReference: {
          predefinedLayout: 'TITLE'
        }
      }
    });

    // Slide 2: Demographics
    requests.push({
      createSlide: {
        objectId: 'slide2',
        slideLayoutReference: {
          predefinedLayout: 'TITLE_AND_BODY'
        }
      }
    });

    // Slide 3: Behavioral Attributes
    requests.push({
      createSlide: {
        objectId: 'slide3',
        slideLayoutReference: {
          predefinedLayout: 'TITLE_AND_BODY'
        }
      }
    });

    // Slide 4: Media Consumption
    requests.push({
      createSlide: {
        objectId: 'slide4',
        slideLayoutReference: {
          predefinedLayout: 'TITLE_AND_BODY'
        }
      }
    });

    // Slide 5: Recommendations
    requests.push({
      createSlide: {
        objectId: 'slide5',
        slideLayoutReference: {
          predefinedLayout: 'TITLE_AND_BODY'
        }
      }
    });

    return requests;
  }

  // Add content to slides
  generateContentRequests(persona_data, generatedPersona) {
    const requests = [];

    // Title slide content
    requests.push({
      insertText: {
        objectId: 'slide1_title',
        text: persona_data?.name || 'Marketing Persona',
        insertionIndex: 0
      }
    });

    requests.push({
      insertText: {
        objectId: 'slide1_subtitle',
        text: 'Data-Driven Consumer Profile\nGenerated by BCM VentasAI',
        insertionIndex: 0
      }
    });

    // Demographics slide
    requests.push({
      insertText: {
        objectId: 'slide2_title',
        text: 'Demographics Overview',
        insertionIndex: 0
      }
    });

    const demographicsText = `
Age Range: ${persona_data?.demographics?.age_range || 'Not specified'}
Gender: ${persona_data?.demographics?.gender || 'Not specified'}
Income Range: ${persona_data?.demographics?.income_range || 'Not specified'}
Education: ${persona_data?.demographics?.education || 'Not specified'}
Location: ${persona_data?.demographics?.location || 'Not specified'}
Occupation: ${persona_data?.demographics?.occupation || 'Not specified'}
    `;

    requests.push({
      insertText: {
        objectId: 'slide2_body',
        text: demographicsText,
        insertionIndex: 0
      }
    });

    // Behavioral Attributes slide
    requests.push({
      insertText: {
        objectId: 'slide3_title',
        text: 'Behavioral Attributes',
        insertionIndex: 0
      }
    });

    const attributesText = `
Industry Vertical: ${persona_data?.attributes?.selectedVertical || 'Not specified'}

Key Behaviors:
${persona_data?.attributes?.selectedBehaviors?.map(behavior => `• ${behavior}`).join('\n') || '• No behaviors specified'}
    `;

    requests.push({
      insertText: {
        objectId: 'slide3_body',
        text: attributesText,
        insertionIndex: 0
      }
    });

    // Media Consumption slide
    requests.push({
      insertText: {
        objectId: 'slide4_title',
        text: 'Media Consumption',
        insertionIndex: 0
      }
    });

    const mediaText = `
Social Media Platforms:
${persona_data?.media_consumption?.social_media_platforms?.map(platform => `• ${platform}`).join('\n') || '• No platforms specified'}

Digital Engagement:
• Primary device usage across desktop and mobile
• Peak activity during business hours and evening
• Content consumption focused on industry-relevant topics
    `;

    requests.push({
      insertText: {
        objectId: 'slide4_body',
        text: mediaText,
        insertionIndex: 0
      }
    });

    // Recommendations slide
    requests.push({
      insertText: {
        objectId: 'slide5_title',
        text: 'Marketing Recommendations',
        insertionIndex: 0
      }
    });

    const recommendationsText = `
Recommended Strategies:
• Targeted social media campaigns on preferred platforms
• Content marketing aligned with behavioral attributes
• Personalized messaging based on demographic insights
• Cross-platform engagement strategies

Data Sources:
• Resonate rAI - Psychographic profiling
• SparkToro - Audience intelligence  
• SEMRush - Search behavior analysis
• Buzzabout.ai - Social listening insights
    `;

    requests.push({
      insertText: {
        objectId: 'slide5_body',
        text: recommendationsText,
        insertionIndex: 0
      }
    });

    return requests;
  }

  // Apply BCM branding to slides
  generateBrandingRequests() {
    const requests = [];

    // Apply BCM orange color scheme
    const bcmOrange = {
      rgbColor: {
        red: 1.0,
        green: 0.6,
        blue: 0.0
      }
    };

    const bcmTeal = {
      rgbColor: {
        red: 0.0,
        green: 0.31,
        blue: 0.37
      }
    };

    // Apply consistent styling to all title elements
    for (let i = 1; i <= 5; i++) {
      requests.push({
        updateTextStyle: {
          objectId: `slide${i}_title`,
          style: {
            foregroundColor: {
              opaqueColor: {
                rgbColor: bcmOrange.rgbColor
              }
            },
            fontSize: {
              magnitude: 32,
              unit: 'PT'
            },
            bold: true
          },
          fields: 'foregroundColor,fontSize,bold'
        }
      });
    }

    return requests;
  }

  // Create complete persona presentation
  async createPersonaPresentation(persona_data, generatedPersona) {
    try {
      const title = `${persona_data?.name || 'Marketing Persona'} - BCM VentasAI Analysis`;
      
      // Create presentation
      const presentation = await this.createPresentation(title);
      const presentationId = presentation.presentationId;

      // Generate slide structure
      const slideRequests = this.generatePersonaSlides(persona_data, generatedPersona);
      
      // Apply slide structure
      await this.slides.presentations.batchUpdate({
        presentationId: presentationId,
        requestBody: {
          requests: slideRequests
        }
      });

      // Add content to slides
      const contentRequests = this.generateContentRequests(persona_data, generatedPersona);
      
      // Apply content
      await this.slides.presentations.batchUpdate({
        presentationId: presentationId,
        requestBody: {
          requests: contentRequests
        }
      });

      // Apply BCM branding
      const brandingRequests = this.generateBrandingRequests();
      
      // Apply branding
      await this.slides.presentations.batchUpdate({
        presentationId: presentationId,
        requestBody: {
          requests: brandingRequests
        }
      });

      return {
        presentationId: presentationId,
        url: `https://docs.google.com/presentation/d/${presentationId}/edit`,
        success: true
      };

    } catch (error) {
      console.error('Error creating persona presentation:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }
}

export default GoogleSlidesService;